def pluginIds = [ 'org.anarres.sablecc', 'sablecc' ];
def pluginImplementation = 'org.anarres.gradle.plugin.sablecc.PureJavaSableCCPlugin'
def pluginDescriptorDir = new File(project.buildDir, "generated-resources/gradle-plugin");

task generatePluginDescriptor {
	outputs.dir pluginDescriptorDir
	doLast {
		pluginDescriptorDir.deleteDir();
		for (String pluginId : pluginIds) {
			// println "Id is ${pluginId} in ${pluginIds}";
			File pluginDescriptorFile = new File(pluginDescriptorDir, "META-INF/gradle-plugins/${pluginId}.properties");
			pluginDescriptorFile.getParentFile().mkdirs();
			pluginDescriptorFile.withWriter { w ->
				w.write("implementation-class=${pluginImplementation}\n" +
						"implementation-version=${project.version}\n");
			}
		}
	}
}
sourceSets.main.output.dir(pluginDescriptorDir, builtBy: generatePluginDescriptor);

/*
plugindev {
	pluginImplementationClass pluginImplementation
	pluginDescription "A Gradle plugin for building SableCC parsers."
	pluginLicenses 'Apache-2.0'
	pluginTags 'gradle', 'plugin', 'sablecc', 'preprocessor', 'compiler', 'parser', 'lexer'
	authorId 'shevek'
	authorName 'Shevek'
	authorEmail 'github@anarres.org'
	projectUrl "https://github.com/shevek/${rootProject.githubProjectName}"
	projectIssuesUrl "https://github.com/shevek/${rootProject.githubProjectName}/issues"
	projectVcsUrl "https://github.com/shevek/${rootProject.githubProjectName}.git"
	projectInceptionYear '2014'
	done()
}

bintray {
	user = rootProject.hasProperty('bintrayUsername')?rootProject.bintrayUsername:''
	key = rootProject.hasProperty('bintrayApiKey')?rootProject.bintrayApiKey:''
	pkg.repo = 'gradle-plugins'
}
*/
